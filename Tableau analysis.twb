<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1112.0850                               -->
<workbook original-version='18.1' source-build='2024.3.1 (20243.24.1112.0850)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Year selection' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2024-12-10#'>
        <calculation class='tableau' formula='#2024-12-10#' />
      </column>
      <column caption='Mortality Change Rate' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10.'>
        <calculation class='tableau' formula='10.' />
        <range granularity='5.0' max='100.0' min='0.0' />
      </column>
      <column caption='Bin Size' datatype='integer' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range granularity='5' max='50' min='10' />
      </column>
      <column caption='Year Range' datatype='integer' datatype-customized='true' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='2020'>
        <calculation class='tableau' formula='2020' />
      </column>
    </datasource>
    <datasource caption='Extract+ (Multiple Connections)' inline='true' name='federated.0y0pvny1ysyuq71fntzuh1u5qnp6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Death' name='hyper.0lfqztf0g7rk0m1h6lmwg1z0ah08'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='D:/GBC SEM/GBC Semester 1/Data Visualization/Assignment/Shrey_Assignment 3.twb Files/Data/Users/patel/OneDrive/Documents/My Tableau Prep Repository/Datasources/Death.hyper' default-settings='yes' server='' sslmode='' username='tableau_internal_user' />
          </named-connection>
          <named-connection caption='events' name='hyper.07y4yvg1sz36pj198lo3m19fwofg'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='D:/GBC SEM/GBC Semester 1/Data Visualization/Assignment/Shrey_Assignment 3.twb Files/Data/GBC SEM/GBC Semester 1/Data Visualization/Assignment/events.hyper' default-settings='yes' server='' sslmode='' username='tableau_internal_user' />
          </named-connection>
          <named-connection caption='Mortality' name='excel-direct.130gr171njkenh198ufk00pwtjew'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/GBC SEM/GBC Semester 1/Data Visualization/Assignment/Shrey_Assignment 3.twb Files/Data/GBC SEM/GBC Semester 1/Data Visualization/Mortality.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='hyper.0lfqztf0g7rk0m1h6lmwg1z0ah08' name='Extract' table='[Extract].[Extract]' type='table' />
          <relation connection='hyper.07y4yvg1sz36pj198lo3m19fwofg' name='Extract1' table='[Extract].[Extract]' type='table' />
          <relation connection='excel-direct.130gr171njkenh198ufk00pwtjew' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:I10001:no:A1:I10001:0' header='yes' outcome='2'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='string' name='Indicator_Name' ordinal='2' />
              <column datatype='string' name='Sex' ordinal='3' />
              <column datatype='string' name='Group - Sex / Age' ordinal='4' />
              <column datatype='real' name='Estimate' ordinal='5' />
              <column datatype='integer' name='Indicator_scale' ordinal='6' />
              <column datatype='string' name='RegionArea' ordinal='7' />
              <column datatype='string' name='Income_Category' ordinal='8' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Country (Extract1)]' value='[Extract1].[Country]' />
          <map key='[Country (Sheet1)]' value='[Sheet1].[Country]' />
          <map key='[Country]' value='[Extract].[Country]' />
          <map key='[Estimate]' value='[Sheet1].[Estimate]' />
          <map key='[Group - Sex / Age]' value='[Sheet1].[Group - Sex / Age]' />
          <map key='[Impact]' value='[Extract1].[Impact]' />
          <map key='[Income_Category]' value='[Sheet1].[Income_Category]' />
          <map key='[Indicator_Name]' value='[Sheet1].[Indicator_Name]' />
          <map key='[Indicator_scale]' value='[Sheet1].[Indicator_scale]' />
          <map key='[Mortality count]' value='[Extract].[Mortality count]' />
          <map key='[Name of Incident]' value='[Extract1].[Name of Incident]' />
          <map key='[Outcome]' value='[Extract1].[Outcome]' />
          <map key='[RegionArea]' value='[Sheet1].[RegionArea]' />
          <map key='[Sex]' value='[Sheet1].[Sex]' />
          <map key='[Sum]' value='[Extract].[Sum]' />
          <map key='[Type of Event]' value='[Extract1].[Type of Event]' />
          <map key='[Year (Extract1)]' value='[Extract1].[Year]' />
          <map key='[Year (Sheet1)]' value='[Sheet1].[Year]' />
          <map key='[Year]' value='[Extract].[Year]' />
          <map key='[disease]' value='[Extract].[disease]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I10001:no:A1:I10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>312</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Extract (Extract.Extract)_7969A4D3A83B488087159E52F8B3083E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>30</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Extract (Extract.Extract)_7969A4D3A83B488087159E52F8B3083E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>disease</remote-name>
            <remote-type>129</remote-type>
            <local-name>[disease]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>disease</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>31</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <object-id>[Extract (Extract.Extract)_7969A4D3A83B488087159E52F8B3083E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Mortality count]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Mortality count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12505</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Extract (Extract.Extract)_7969A4D3A83B488087159E52F8B3083E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sum]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sum</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>24744</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Extract (Extract.Extract)_7969A4D3A83B488087159E52F8B3083E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name of Incident</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name of Incident]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>Name of Incident</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>359</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Extract (Extract.Extract)_70291997473743C1AE7A9FC9E29CEFE8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Year (Extract1)]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>108</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Extract (Extract.Extract)_70291997473743C1AE7A9FC9E29CEFE8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Extract1)]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>64</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Extract (Extract.Extract)_70291997473743C1AE7A9FC9E29CEFE8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type of Event]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>Type of Event</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>161</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Extract (Extract.Extract)_70291997473743C1AE7A9FC9E29CEFE8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Impact</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Impact]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>Impact</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>366</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Extract (Extract.Extract)_70291997473743C1AE7A9FC9E29CEFE8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Outcome</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Outcome]</local-name>
            <parent-name>[Extract1]</parent-name>
            <remote-alias>Outcome</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Extract (Extract.Extract)_70291997473743C1AE7A9FC9E29CEFE8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Sheet1)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_8BD9EF4CCD6B47688D6AB9222FE669CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Sheet1)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_8BD9EF4CCD6B47688D6AB9222FE669CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Indicator_Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Indicator_Name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_8BD9EF4CCD6B47688D6AB9222FE669CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_8BD9EF4CCD6B47688D6AB9222FE669CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group - Sex / Age</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group - Sex / Age]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Group - Sex / Age</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_8BD9EF4CCD6B47688D6AB9222FE669CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Estimate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_8BD9EF4CCD6B47688D6AB9222FE669CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator_scale</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Indicator_scale]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Indicator_scale</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_8BD9EF4CCD6B47688D6AB9222FE669CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RegionArea</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RegionArea]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>RegionArea</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_8BD9EF4CCD6B47688D6AB9222FE669CA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income_Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Income_Category]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Income_Category</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_8BD9EF4CCD6B47688D6AB9222FE669CA]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Mortality Rate' datatype='real' name='[Calculation_1724315731126599681]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Mortality count])/ COUNT([Country])' />
      </column>
      <column caption='Event Impact score' datatype='real' name='[Calculation_1724315731127009282]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Outcome]&#13;&#10;    WHEN &apos;Negative&apos; THEN -1 * FLOAT([Impact])&#13;&#10;    WHEN &apos;Positive&apos; THEN 1 * FLOAT([Impact])&#13;&#10;    WHEN &apos;Mixed&apos; THEN 0 * FLOAT([Impact])&#13;&#10;    ELSE 0&#13;&#10;END' />
      </column>
      <column caption='Cumulative Percentage' datatype='real' name='[Calculation_1724315731140354054]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Mortality count]))/TOTAL(SUM([Mortality count]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Year-over-Year change' datatype='real' name='[Calculation_1724315731149099015]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Mortality count]) - LOOKUP(SUM([Mortality count]), -1)) / LOOKUP(SUM([Mortality count]), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Running_total' datatype='integer' name='[Calculation_1724315731152416776]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Mortality count]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Percent of total' datatype='real' name='[Calculation_1724315731152637961]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([Mortality count]))/TOTAL(SUM([Mortality count]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Adjusted Mortality' datatype='real' name='[Calculation_1724315731160125452]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Mortality count] * (1 + [Parameters].[Parameter 2]/100)' />
      </column>
      <column caption='_YoY_Growth' datatype='real' name='[Calculation_1724315731224715280]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// YOY Growth&#13;&#10;(SUM([Estimate]) - [Calculation_3187985610335686658]) /&#13;&#10;[Calculation_3187985610335686658]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Trend Indicator' datatype='string' name='[Calculation_1724315731227574291]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1724315731224715280] &gt; 0 THEN &quot;▲&quot;&#13;&#10;ELSEIF [Calculation_1724315731224715280] &lt; 0 THEN &quot;▼&quot;&#13;&#10;ELSE &quot;►&quot;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_Previous_year_estimate' datatype='real' name='[Calculation_3187985610335686658]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LOOKUP(SUM([Estimate]), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_YOY_INDICATOR' datatype='string' name='[Calculation_3187985610336006148]' role='measure' type='nominal'>
        <calculation class='tableau' formula='// Growth Indicator&#13;&#10;IF [Calculation_1724315731224715280] &gt; 0 THEN &quot;▲&quot;&#13;&#10;ELSEIF [Calculation_1724315731224715280] &lt; 0 THEN &quot;▼&quot;&#13;&#10;ELSE &quot;►&quot;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_Regional_Average' datatype='real' name='[Calculation_3187985610337386501]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Regional Average&#13;&#10;{FIXED [RegionArea]: AVG([Estimate])}' />
      </column>
      <column caption='_Overall_Average' datatype='real' name='[Calculation_3187985610337517574]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Overall Average&#13;&#10;{FIXED : AVG([Estimate])}' />
      </column>
      <column caption='_Regional_Performance_Index' datatype='real' name='[Calculation_3187985610337648647]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_3187985610337386501] - [Calculation_3187985610337517574]) /&#13;&#10;[Calculation_3187985610337517574]' />
      </column>
      <column caption='_Regional_Indicator' datatype='string' name='[Calculation_3187985610337898504]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// Performance Indicator&#13;&#10;IF [Calculation_3187985610337648647] &gt; 0 THEN &quot;▲&quot;&#13;&#10;ELSEIF [Calculation_3187985610337648647] &lt; 0 THEN &quot;▼&quot;&#13;&#10;ELSE &quot;►&quot;&#13;&#10;END' />
      </column>
      <column caption='_Gender_AVG' datatype='real' name='[Calculation_3187985610341257230]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Gender Average&#13;&#10;{FIXED [Sex]: AVG([Estimate])}' />
      </column>
      <column caption='_Gender_Index' datatype='real' name='[Calculation_3187985610341367823]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Gender Disparity Index&#13;&#10;([Calculation_3187985610341257230]) / ([Calculation_3187985610337517574])' />
      </column>
      <column caption='_Disparity_Indicator' datatype='string' name='[Calculation_3187985610341589008]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// Disparity Indicator&#13;&#10;IF [Calculation_3187985610341367823] &gt; 1 THEN &quot;▲&quot;&#13;&#10;ELSEIF [Calculation_3187985610341367823] &lt; 1 THEN &quot;▼&quot;&#13;&#10;ELSE &quot;►&quot;&#13;&#10;END' />
      </column>
      <column caption='_Performance_color' datatype='string' name='[Calculation_3187985610345586705]' role='measure' type='nominal'>
        <calculation class='tableau' formula='// Performance Color&#13;&#10;IF [Calculation_1724315731224715280] &gt; 0 THEN &quot;#2ECC71&quot;    // Green&#13;&#10;ELSEIF [Calculation_1724315731224715280] &lt; 0 THEN &quot;#E74C3C&quot; // Red&#13;&#10;ELSE &quot;#F1C40F&quot;                         // Yellow&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Country (Extract1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (Sheet1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Group - Sex / Age]' role='dimension' type='nominal' />
      <column caption='Income Category' datatype='string' name='[Income_Category]' role='dimension' type='nominal' />
      <column caption='Indicator Name' datatype='string' name='[Indicator_Name]' role='dimension' type='nominal' />
      <column caption='Indicator scale' datatype='integer' name='[Indicator_scale]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Mortality count]' role='measure' type='quantitative' />
      <column datatype='string' name='[Outcome]' role='dimension' type='nominal' />
      <column caption='Region Area' datatype='string' name='[RegionArea]' role='dimension' type='nominal' />
      <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
      <column datatype='string' name='[Type of Event]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year (Sheet1)]' role='dimension' type='quantitative' />
      <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
      <column caption='Extract1' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_70291997473743C1AE7A9FC9E29CEFE8]' role='measure' type='quantitative' />
      <column caption='Extract' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_7969A4D3A83B488087159E52F8B3083E]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_8BD9EF4CCD6B47688D6AB9222FE669CA]' role='measure' type='quantitative' />
      <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
      <column-instance column='[Mortality count]' derivation='Sum' name='[cum:sum:Mortality count:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[disease]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[Mortality count]' derivation='Sum' name='[cum:sum:Mortality count:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Mortality count]' derivation='Sum' name='[diff:cum:sum:Mortality count:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[disease]' ordering-type='Field' type='CumTotal' />
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Mortality count]' derivation='Sum' name='[diff:cum:sum:Mortality count:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_3187985610341589008]' derivation='None' name='[none:Calculation_3187985610341589008:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country (Extract1)]' derivation='None' name='[none:Country (Extract1):nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Group - Sex / Age]' derivation='None' name='[none:Group - Sex / Age:nk]' pivot='key' type='nominal' />
      <column-instance column='[Income_Category]' derivation='None' name='[none:Income_Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Indicator_Name]' derivation='None' name='[none:Indicator_Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Outcome]' derivation='None' name='[none:Outcome:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
      <column-instance column='[Type of Event]' derivation='None' name='[none:Type of Event:nk]' pivot='key' type='nominal' />
      <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
      <column-instance column='[Mortality count]' derivation='Sum' name='[pcto:cum:sum:Mortality count:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
        <table-calc ordering-field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Mortality count]' derivation='Sum' name='[pcto:cum:sum:Mortality count:qk:3]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[disease]' ordering-type='Field' type='CumTotal' />
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Mortality count]' derivation='Sum' name='[pcto:cum:sum:Mortality count:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[disease]' ordering-type='Field' type='CumTotal' />
        <table-calc ordering-field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1724315731160125452]' derivation='Sum' name='[sum:Calculation_1724315731160125452:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mortality count]' derivation='Sum' name='[sum:Mortality count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1724315731152637961]' derivation='User' name='[usr:Calculation_1724315731152637961:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1724315731227574291]' derivation='User' name='[usr:Calculation_1724315731227574291:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Calculation_1724315731224715280]' ordering-type='Rows' />
        <table-calc field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Calculation_3187985610335686658]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Top 5 Country mortality' name='[Country Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Country]' member='&quot;China&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;India&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Indonesia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;Russia&quot;' />
          <groupfilter function='member' level='[Country]' member='&quot;United States&quot;' />
        </groupfilter>
      </group>
      <group caption='Top 10 Disease' name='[Disease Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[disease]' member='&quot;Cardiovascular Diseases&quot;' />
          <groupfilter function='member' level='[disease]' member='&quot;Cirrhosis and Other Chronic Liver Diseases&quot;' />
          <groupfilter function='member' level='[disease]' member='&quot;Diarrheal Diseases&quot;' />
          <groupfilter function='member' level='[disease]' member='&quot;Digestive Diseases&quot;' />
          <groupfilter function='member' level='[disease]' member='&quot;HIV/AIDS&quot;' />
          <groupfilter function='member' level='[disease]' member='&quot;Lower Respiratory Infections&quot;' />
          <groupfilter function='member' level='[disease]' member='&quot;Neonatal Disorders&quot;' />
          <groupfilter function='member' level='[disease]' member='&quot;Neoplasms&quot;' />
          <groupfilter function='member' level='[disease]' member='&quot;Road Injuries&quot;' />
          <groupfilter function='member' level='[disease]' member='&quot;Tuberculosis&quot;' />
        </groupfilter>
      </group>
      <group caption='Top 5 Disease' name='[Disease Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[disease]' member='&quot;Cardiovascular Diseases&quot;' />
          <groupfilter function='member' level='[disease]' member='&quot;Diarrheal Diseases&quot;' />
          <groupfilter function='member' level='[disease]' member='&quot;Lower Respiratory Infections&quot;' />
          <groupfilter function='member' level='[disease]' member='&quot;Neonatal Disorders&quot;' />
          <groupfilter function='member' level='[disease]' member='&quot;Neoplasms&quot;' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:disease:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Diabetes Mellitus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Road Injuries&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Acute Hepatitis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maternal Disorders&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chronic Kidney Disease&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nutritional Deficiencies&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Drug Use Disorders&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Diarrheal Diseases&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Self-harm&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chronic Respiratory Diseases&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Parkinson&apos;s Disease&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lower Respiratory Infections&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alcohol Use Disorders&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Meningitis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HIV/AIDS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cirrhosis and Other Chronic Liver Diseases&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Poisonings&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Environmental Heat and Cold Exposure&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Exposure to Forces of Nature&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Interpersonal Violence&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Digestive Diseases&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tuberculosis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Conflict and Terrorism&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Protein-Energy Malnutrition&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alzheimer&apos;s Disease and Other Dementias&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neonatal Disorders&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fire, Heat, and Hot Substances&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Drowning&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cardiovascular Diseases&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Neoplasms&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country (Extract1):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malaya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait, Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Basra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mosul&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zhanaozen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Type of Event:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;AntiUnknownCorruption Effort&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Diplomatic Agreement&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Humanitarian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Judicial Execution&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Military Coup&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nuclear Accident&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Political Union&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Social Movement/Legal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Corruption Investigation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Environmental&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;International Finance&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maritime Disaster&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Military/Political&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Political Decision&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Regional Conflict&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;War&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Administrative Reorganization&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coup&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Genocide&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;International Sports Event&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Military Aggression&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nationalization&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Political Reorganization&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Secession Attempt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aviation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Domestic Terrorism&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Industrial Accident&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Land Policy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Military Invasion&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peace Process&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Political/Social Movement&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Space Exploration Disaster&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AntiUnknownImperialist Uprising&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Diplomatic Event&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Humanitarian/Political&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Judiciary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Military Engagement&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nuclear Test&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Political/Infrastructure&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Social Policy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Agricultural Development&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coup d&apos;état&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Geopolitical Division&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;International Summit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Military Alliance&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Natural Disaster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Political Repression&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Security Incident&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conference&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Election&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;International Crisis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Legislative&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Military Surrender&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Political Coup&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rail&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Urban Development&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Accident&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Corruption Scandal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Environmental/Economic Policy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;International Incident&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Massacre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Military/Political Incident&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Political Ideology&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Resistance Movement&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;War Declaration&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Civil War&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Economic Development&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;International Conference&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Legal/Political&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Military Rebellion&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Political Change&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Protests&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Structural Failure&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Agricultural Policy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Defense Policy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Health&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;International Treaty&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Military Campaign&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Natural Event&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Political Revolution&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Social&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Civil Rights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Economic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Industrial Disaster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Land Reform&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Military Occupation&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pogrom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Political/Territorial Change&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spacecraft Accident&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Civil Rights Violation&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Economic and Infrastructure Project&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Insurgency&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Leadership Change&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Military Offensive&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Political&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Population Control Policy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;State Establishment&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colonial Rule&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Economic Policy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;International Conflict&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Legislation&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Military Siege&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Political Corruption&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Public Health&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Terrorism&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Conflict&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;End of WWII&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;International Event&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maritime&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Military/Atomic Warfare&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Political Crisis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rebellion&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Violent Protest&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armed Rebellion&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Diplomatic Incident&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Justice System&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Military Formation&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Partition&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Political/Military Organization&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Social Unrest&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Annexation&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dictatorship&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Health Crisis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Judicial&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Military Conflict&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Negotiation&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Political Scandal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Social Movement&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Administrative&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CounterUnknownInsurgency&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethnic Conflict&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;International Policy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Military&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Military/Science&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Political Movement&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Revolution&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Civil Unrest&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Economic Crisis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;International Agreement&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Legal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Military Operation&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Political Action&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Protest Movement&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;State Formation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Assassination Attempt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Disaster&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Independence Movement&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Labor Movement&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Military Intervention&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peace Agreement&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Political/Secession&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sovereignty Transition&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Administrative Change&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Country Formation&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Famine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;International Relations&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Military Administration&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monarchy Establishment&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Political Rebellion&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Royal Event&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Group - Sex / Age:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Age&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sex&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Indicator_Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ambient air pollution attributable DALYs (age-standardized) (per 100 000 population) - Trachea, bronchus, lung cancers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ambient and household air pollution attributable death rate (age-standardized) (per 100 000 population) - Chronic obstructive pulmonary disease&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Household air pollution attributable DALYs (age-standardized) (per 100 000 population) - Chronic obstructive pulmonary disease&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Household air pollution attributable death rate (per 100 000 population) - Ischaemic heart disease&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adult mortality rate (probability of dying between 15 and 60 years per 1000 population)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ambient air pollution attributable death rate (age-standardized) (per 100 000 population) - Trachea, bronchus, lung cancers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crude suicide rates (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Household air pollution attributable death rate (age-standardized) (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Under-five mortality rate (SDG 3.2.1) (per 1000 live births)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ambient air pollution attributable DALYs (age-standardized) (per 100 000 population) - Chronic obstructive pulmonary disease&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ambient air pollution attributable death rate (per 100 000 population) - Lower respiratory infections&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Healthy life expectancy (HALE) at birth (years)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Household air pollution attributable death rate (age-standardized) (per 100 000 population) - Stroke&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ambient air pollution attributable DALYs (per 100 000 population) - Lower respiratory infections&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ambient and household air pollution attributable death rate (age-standardized) (per 100 000 population) - Trachea, bronchus, lung cancers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Household air pollution attributable DALYs (age-standardized) (per 100 000 population) - Trachea, bronchus, lung cancers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Infant mortality rate (deaths per 1000 live births)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ambient air pollution attributable DALYs (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ambient and household air pollution attributable death rate (age-standardized) (per 100 000 population) - Ischaemic heart disease&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Household air pollution attributable DALYs (age-standardized) (per 100 000 population) - Ischaemic heart disease&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Household air pollution attributable death rate (per 100 000 population) - Lower respiratory infections&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ambient air pollution attributable DALYs (age-standardized) (per 100 000 population) - Ischaemic heart disease&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ambient air pollution attributable death rate (per 100 000 population) - Stroke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Homicide rate (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Household air pollution attributable death rate (age-standardized) (per 100 000 population) - Trachea, bronchus, lung cancers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ambient air pollution attributable death rate (age-standardized) (per 100 000 population) - Lower respiratory infections&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ambient and household air pollution attributable death rate (per 100 000 population) - Trachea, bronchus, lung cancers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Household air pollution attributable DALYs (per 100 000 population) - Stroke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Probability of dying between age 30 and exact age 70 from any of cardiovascular disease, cancer, diabetes or chronic respiratory disease (\%)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Age-standardized NCD mortality rate  (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ambient air pollution attributable death rate (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crude suicide rates (per 100 000 population) - Female&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Household air pollution attributable death rate (age-standardized) (per 100 000 population) - Chronic obstructive pulmonary disease&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ambient air pollution attributable death rate (age-standardized) (per 100 000 population) - Chronic obstructive pulmonary disease&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ambient and household air pollution attributable death rate (per 100 000 population) - Lower respiratory infections&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Household air pollution attributable DALYs (per 100 000 population) - Ischaemic heart disease&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mortality rate attributed to exposure to unsafe WASH services (SDG 3.9.2) (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ambient air pollution attributable DALYs (age-standardized) (per 100 000 population) - Lower respiratory infections&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ambient air pollution attributable death rate (per 100 000 population) - Trachea, bronchus, lung cancers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Household air pollution attributable DALYs (age-standardized) (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Household air pollution attributable death rate (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ambient air pollution attributable DALYs (per 100 000 population) - Stroke&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ambient and household air pollution attributable death rate (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Household air pollution attributable DALYs (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Life expectancy at age 60 (years)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ambient air pollution attributable DALYs (per 100 000 population) - Trachea, bronchus, lung cancers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ambient and household air pollution attributable death rate (per 100 000 population) - Chronic obstructive pulmonary disease&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Household air pollution attributable DALYs (per 100 000 population) - Cataracts&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Life expectancy at birth (years)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ambient air pollution attributable death rate (age-standardized) (per 100 000 population) - Ischaemic heart disease&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ambient and household air pollution attributable death rate (per 100 000 population) - Stroke&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Household air pollution attributable DALYs (per 100 000 population) - Lower respiratory infections&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mortality rate attributed to unintentional poisoning (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ambient air pollution attributable death rate (age-standardized) (per 100 000 population) - Stroke&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cancer, age-standardized death rates (15+) (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Household air pollution attributable DALYs (per 100 000 population) - Trachea, bronchus, lung cancers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Road traffic injuries, age-standardized death rates (15+) (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ambient air pollution attributable DALYs (per 100 000 population) - Chronic obstructive pulmonary disease&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ambient and household air pollution attributable death rate (age-standardized) (per 100 000 population) - Lower respiratory infections&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Household air pollution attributable DALYs (age-standardized) (per 100 000 population) - Lower respiratory infections&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Household air pollution attributable death rate (per 100 000 population) - Stroke&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ambient air pollution attributable DALYs (age-standardized) (per 100 000 population) - Stroke&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ambient and household air pollution attributable death rate (age-standardized) (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Household air pollution attributable DALYs (age-standardized) (per 100 000 population) - Cataracts&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Household air pollution attributable death rate (per 100 000 population) - Chronic obstructive pulmonary disease&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Age-standardized suicide rates (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ambient air pollution attributable death rate (per 100 000 population) - Chronic obstructive pulmonary disease&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crude suicide rates (per 100 000 population) - Male&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Household air pollution attributable death rate (age-standardized) (per 100 000 population) - Ischaemic heart disease&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ambient air pollution attributable death rate (age-standardized) (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ambient and household air pollution attributable death rate (per 100 000 population) - Ischaemic heart disease&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Household air pollution attributable DALYs (per 100 000 population) - Chronic obstructive pulmonary disease&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liver cirrhosis, age-standardized death rates (15+) (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ambient air pollution attributable DALYs (per 100 000 population) - Ischaemic heart disease&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ambient and household air pollution attributable death rate (age-standardized) (per 100 000 population) - Stroke&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Household air pollution attributable DALYs (age-standardized) (per 100 000 population) - Stroke&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Household air pollution attributable death rate (per 100 000 population) - Trachea, bronchus, lung cancers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ambient air pollution attributable DALYs (age-standardized) (per 100 000 population)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ambient air pollution attributable death rate (per 100 000 population) - Ischaemic heart disease&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Healthy life expectancy (HALE) at age 60 (years)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Household air pollution attributable death rate (age-standardized) (per 100 000 population) - Lower respiratory infections&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Indicator_Name:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Adult mortality rate (probability of dying between 15 and 60 years per 1000 population)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Life expectancy at birth (years)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Infant mortality rate (deaths per 1000 live births)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Age-standardized NCD mortality rate  (per 100 000 population)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Under-five mortality rate (SDG 3.2.1) (per 1000 live births)&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Income_Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1724315731228258324:nk:1]&#10;[usr:Calculation_1724315731227574291:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;\#2ECC71&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;\#F1C40F&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;\#E74C3C&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[pcto:cum:sum:Mortality count:qk:2]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Calculation_1724315731160125452:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_1724315731152637961:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[cum:sum:Mortality count:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[cum:sum:Mortality count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[diff:cum:sum:Mortality count:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[diff:cum:sum:Mortality count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[pcto:cum:sum:Mortality count:qk:3]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[pcto:cum:sum:Mortality count:qk:4]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Mortality count:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Year:ok]' type='palette'>
            <map to='#499894'>
              <bucket>1998</bucket>
            </map>
            <map to='#499894'>
              <bucket>2018</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1990</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2010</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1994</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2014</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2002</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1999</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2019</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1995</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2015</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>2008</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1991</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2011</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2006</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1996</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2016</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2003</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2004</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2007</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>2009</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2000</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1997</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2017</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1992</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2012</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2005</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2001</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1993</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2013</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sex:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;85+ years&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;15-19 years&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;45-54 years&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;55-64 years&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;15-24 years&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;65-74 years&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;75-84 years&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;25-34 years&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;35-44 years&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_3187985610341589008:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;▲&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;▼&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Outcome:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Negative&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mixed&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Mortality Change Rate' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10.'>
          <calculation class='tableau' formula='10.' />
          <range granularity='5.0' max='100.0' min='0.0' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Extract1' id='Extract (Extract.Extract)_70291997473743C1AE7A9FC9E29CEFE8'>
            <properties context=''>
              <relation connection='hyper.07y4yvg1sz36pj198lo3m19fwofg' name='Extract1' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
          <object caption='Extract' id='Extract (Extract.Extract)_7969A4D3A83B488087159E52F8B3083E'>
            <properties context=''>
              <relation connection='hyper.0lfqztf0g7rk0m1h6lmwg1z0ah08' name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
          <object caption='Sheet1' id='Sheet1_8BD9EF4CCD6B47688D6AB9222FE669CA'>
            <properties context=''>
              <relation connection='excel-direct.130gr171njkenh198ufk00pwtjew' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:I10001:no:A1:I10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='string' name='Indicator_Name' ordinal='2' />
                  <column datatype='string' name='Sex' ordinal='3' />
                  <column datatype='string' name='Group - Sex / Age' ordinal='4' />
                  <column datatype='real' name='Estimate' ordinal='5' />
                  <column datatype='integer' name='Indicator_scale' ordinal='6' />
                  <column datatype='string' name='RegionArea' ordinal='7' />
                  <column datatype='string' name='Income_Category' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Year]' />
              <expression op='[Year (Extract1)]' />
            </expression>
            <first-end-point object-id='Extract (Extract.Extract)_7969A4D3A83B488087159E52F8B3083E' />
            <second-end-point object-id='Extract (Extract.Extract)_70291997473743C1AE7A9FC9E29CEFE8' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (Sheet1)]' />
            </expression>
            <first-end-point object-id='Extract (Extract.Extract)_7969A4D3A83B488087159E52F8B3083E' />
            <second-end-point object-id='Sheet1_8BD9EF4CCD6B47688D6AB9222FE669CA' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Disease Pareto'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Disease Pareto</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.0y0pvny1ysyuq71fntzuh1u5qnp6' />
          </datasources>
          <datasource-dependencies datasource='federated.0y0pvny1ysyuq71fntzuh1u5qnp6'>
            <column datatype='integer' name='[Mortality count]' role='measure' type='quantitative' />
            <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
            <column-instance column='[Mortality count]' derivation='None' name='[none:Mortality count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
            <column-instance column='[disease]' derivation='CountD' name='[pcto:cum:ctd:disease:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[disease]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Mortality count]' derivation='Sum' name='[pcto:cum:sum:Mortality count:qk:4]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[disease]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Mortality count]' derivation='Sum' name='[sum:Mortality count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Mortality count:qk]' included-values='in-range'>
            <min>0</min>
            <max>4584273</max>
          </filter>
          <manual-sort column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Cardiovascular Diseases&quot;</bucket>
              <bucket>&quot;Neoplasms&quot;</bucket>
              <bucket>&quot;Chronic Respiratory Diseases&quot;</bucket>
              <bucket>&quot;Lower Respiratory Infections&quot;</bucket>
              <bucket>&quot;Neonatal Disorders&quot;</bucket>
              <bucket>&quot;Diarrheal Diseases&quot;</bucket>
              <bucket>&quot;Digestive Diseases&quot;</bucket>
              <bucket>&quot;Tuberculosis&quot;</bucket>
              <bucket>&quot;Cirrhosis and Other Chronic Liver Diseases&quot;</bucket>
              <bucket>&quot;HIV/AIDS&quot;</bucket>
              <bucket>&quot;Road Injuries&quot;</bucket>
              <bucket>&quot;Diabetes Mellitus&quot;</bucket>
              <bucket>&quot;Alzheimer&apos;s Disease and Other Dementias&quot;</bucket>
              <bucket>&quot;Chronic Kidney Disease&quot;</bucket>
              <bucket>&quot;Malaria&quot;</bucket>
              <bucket>&quot;Self-harm&quot;</bucket>
              <bucket>&quot;Nutritional Deficiencies&quot;</bucket>
              <bucket>&quot;Interpersonal Violence&quot;</bucket>
              <bucket>&quot;Protein-Energy Malnutrition&quot;</bucket>
              <bucket>&quot;Meningitis&quot;</bucket>
              <bucket>&quot;Drowning&quot;</bucket>
              <bucket>&quot;Maternal Disorders&quot;</bucket>
              <bucket>&quot;Parkinson&apos;s Disease&quot;</bucket>
              <bucket>&quot;Alcohol Use Disorders&quot;</bucket>
              <bucket>&quot;Acute Hepatitis&quot;</bucket>
              <bucket>&quot;Fire, Heat, and Hot Substances&quot;</bucket>
              <bucket>&quot;Conflict and Terrorism&quot;</bucket>
              <bucket>&quot;Drug Use Disorders&quot;</bucket>
              <bucket>&quot;Poisonings&quot;</bucket>
              <bucket>&quot;Environmental Heat and Cold Exposure&quot;</bucket>
              <bucket>&quot;Exposure to Forces of Nature&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Mortality count:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Mortality count:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]' />
              <color column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[pcto:cum:ctd:disease:qk:1]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0.20000000000000001' value-column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[pcto:cum:ctd:disease:qk:1]' z-order='1' />
            <reference-line axis-column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[pcto:cum:sum:Mortality count:qk:4]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.80000000000000004' value-column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[pcto:cum:sum:Mortality count:qk:4]' z-order='2' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[pcto:cum:sum:Mortality count:qk:4]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]' />
              <color column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Mortality count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]' />
              <color column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[pcto:cum:sum:Mortality count:qk:4] + [federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Mortality count:qk])</rows>
        <cols>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[pcto:cum:ctd:disease:qk:1]</cols>
      </table>
      <simple-id uuid='{39417BD1-297B-4A8E-AC1A-DBF90D6EC7AD}' />
    </worksheet>
    <worksheet name='Gender Disparity Index'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>KPI 3: Gender Disparity Index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.0y0pvny1ysyuq71fntzuh1u5qnp6' />
          </datasources>
          <datasource-dependencies datasource='federated.0y0pvny1ysyuq71fntzuh1u5qnp6'>
            <column caption='_Overall_Average' datatype='real' name='[Calculation_3187985610337517574]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Overall Average&#13;&#10;{FIXED : AVG([Estimate])}' />
            </column>
            <column caption='_Gender_AVG' datatype='real' name='[Calculation_3187985610341257230]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Gender Average&#13;&#10;{FIXED [Sex]: AVG([Estimate])}' />
            </column>
            <column caption='_Gender_Index' datatype='real' name='[Calculation_3187985610341367823]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Gender Disparity Index&#13;&#10;([Calculation_3187985610341257230]) / ([Calculation_3187985610337517574])' />
            </column>
            <column caption='_Disparity_Indicator' datatype='string' name='[Calculation_3187985610341589008]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Disparity Indicator&#13;&#10;IF [Calculation_3187985610341367823] &gt; 1 THEN &quot;▲&quot;&#13;&#10;ELSEIF [Calculation_3187985610341367823] &lt; 1 THEN &quot;▼&quot;&#13;&#10;ELSE &quot;►&quot;&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Estimate]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3187985610341589008]' derivation='None' name='[none:Calculation_3187985610341589008:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3187985610341367823]' derivation='Sum' name='[sum:Calculation_3187985610341367823:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Calculation_3187985610341367823:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Calculation_3187985610341589008:nk]' />
              <text column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Calculation_3187985610341367823:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Calculation_3187985610341367823:qk]</rows>
        <cols>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]</cols>
      </table>
      <simple-id uuid='{493B8350-0581-453B-8AC8-02953B66E44E}' />
    </worksheet>
    <worksheet name='Global Adult Mortality Ranking'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Global Adult Mortality Ranking</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.0y0pvny1ysyuq71fntzuh1u5qnp6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0y0pvny1ysyuq71fntzuh1u5qnp6'>
            <column datatype='string' name='[Country (Sheet1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Estimate]' role='measure' type='quantitative' />
            <column caption='Indicator Name' datatype='string' name='[Indicator_Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column-instance column='[Estimate]' derivation='Avg' name='[avg:Estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country (Sheet1)]' derivation='None' name='[none:Country (Sheet1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator_Name]' derivation='None' name='[none:Indicator_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimate]' derivation='Sum' name='[sum:Estimate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Country (Sheet1):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Estimate])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country (Sheet1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Country (Sheet1):nk]' direction='DESC' using='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Estimate:qk]' />
          <filter class='categorical' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]'>
            <groupfilter function='member' level='[none:Indicator_Name:nk]' member='&quot;Adult mortality rate (probability of dying between 15 and 60 years per 1000 population)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Country (Sheet1):nk]</column>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]</column>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]' value='55' />
            <format attr='text-format' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Estimate:qk]' value='' />
            <format attr='text-format' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[avg:Estimate:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]' />
              <text column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[avg:Estimate:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[avg:Estimate:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[avg:Estimate:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[avg:Estimate:qk]</rows>
        <cols>([federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Country (Sheet1):nk] / [federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk])</cols>
      </table>
      <simple-id uuid='{D6DF7C96-644C-4DBF-937B-09D68B88B76E}' />
    </worksheet>
    <worksheet name='Global Event Sentiments'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Global Event Sentiments</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.0y0pvny1ysyuq71fntzuh1u5qnp6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0y0pvny1ysyuq71fntzuh1u5qnp6'>
            <column datatype='string' name='[Country (Extract1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Outcome]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type of Event]' role='dimension' type='nominal' />
            <column-instance column='[Country (Extract1)]' derivation='None' name='[none:Country (Extract1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Outcome]' derivation='None' name='[none:Outcome:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Event]' derivation='None' name='[none:Type of Event:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Longitude (generated)]' field-type='quantitative' max='34479590.841536373' min='-1290342.4754266655' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Latitude (generated)]' field-type='quantitative' max='15068336.330462297' min='-8308482.0592301283' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Outcome:nk]' />
              <text column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Type of Event:nk]' />
              <lod column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Country (Extract1):nk]' />
              <geometry column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.51574587821960449' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Latitude (generated)]</rows>
        <cols>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3751C156-4A7C-4097-8CD8-EB7A38D3CE80}' />
    </worksheet>
    <worksheet name='Global Indicators Performance'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book' fontsize='16'>ScoreCard: Global Indicators Performance</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.0y0pvny1ysyuq71fntzuh1u5qnp6' />
          </datasources>
          <datasource-dependencies datasource='federated.0y0pvny1ysyuq71fntzuh1u5qnp6'>
            <column caption='_YoY_Growth' datatype='real' name='[Calculation_1724315731224715280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// YOY Growth&#13;&#10;(SUM([Estimate]) - [Calculation_3187985610335686658]) /&#13;&#10;[Calculation_3187985610335686658]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Trend Indicator' datatype='string' name='[Calculation_1724315731227574291]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1724315731224715280] &gt; 0 THEN &quot;▲&quot;&#13;&#10;ELSEIF [Calculation_1724315731224715280] &lt; 0 THEN &quot;▼&quot;&#13;&#10;ELSE &quot;►&quot;&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='_Previous_year_estimate' datatype='real' name='[Calculation_3187985610335686658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LOOKUP(SUM([Estimate]), -1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='_Performance_color' datatype='string' name='[Calculation_3187985610345586705]' role='measure' type='nominal'>
              <calculation class='tableau' formula='// Performance Color&#13;&#10;IF [Calculation_1724315731224715280] &gt; 0 THEN &quot;#2ECC71&quot;    // Green&#13;&#10;ELSEIF [Calculation_1724315731224715280] &lt; 0 THEN &quot;#E74C3C&quot; // Red&#13;&#10;ELSE &quot;#F1C40F&quot;                         // Yellow&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country (Sheet1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Estimate]' role='measure' type='quantitative' />
            <column caption='Income Category' datatype='string' name='[Income_Category]' role='dimension' type='nominal' />
            <column caption='Indicator Name' datatype='string' name='[Indicator_Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year (Sheet1)]' role='dimension' type='quantitative' />
            <column-instance column='[Country (Sheet1)]' derivation='None' name='[none:Country (Sheet1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Income_Category]' derivation='None' name='[none:Income_Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator_Name]' derivation='None' name='[none:Indicator_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (Sheet1)]' derivation='None' name='[none:Year (Sheet1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Estimate]' derivation='Sum' name='[sum:Estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1724315731224715280]' derivation='User' name='[usr:Calculation_1724315731224715280:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Calculation_3187985610335686658]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1724315731227574291]' derivation='User' name='[usr:Calculation_1724315731227574291:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Calculation_1724315731224715280]' ordering-type='Rows' />
              <table-calc field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Calculation_3187985610335686658]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_3187985610345586705]' derivation='User' name='[usr:Calculation_3187985610345586705:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Calculation_1724315731224715280]' ordering-type='Rows' />
              <table-calc field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Calculation_3187985610335686658]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]'>
            <groupfilter function='member' level='[none:Income_Category:nk]' member='&quot;Upper middle income&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Indicator_Name:nk]' member='&quot;Adult mortality rate (probability of dying between 15 and 60 years per 1000 population)&quot;' />
              <groupfilter function='member' level='[none:Indicator_Name:nk]' member='&quot;Crude suicide rates (per 100 000 population)&quot;' />
              <groupfilter function='member' level='[none:Indicator_Name:nk]' member='&quot;Healthy life expectancy (HALE) at age 60 (years)&quot;' />
              <groupfilter function='member' level='[none:Indicator_Name:nk]' member='&quot;Life expectancy at age 60 (years)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]' included-values='in-range'>
            <min>2019</min>
            <max>2022</max>
          </filter>
          <slices>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]</column>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]</column>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]</column>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]' value='36' />
            <format attr='text-format' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Estimate:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='text-format' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_1724315731224715280:qk]' value='p0.00%' />
            <format attr='text-align' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_1724315731227574291:nk]' value='center' />
            <format attr='vertical-align' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_1724315731227574291:nk]' value='bottom' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_1724315731227574291:nk]' value='bottom' />
            <format attr='text-align' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_1724315731227574291:nk]' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_3187985610345586705:nk:1]' />
              <lod column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Estimate:qk]' />
              <text column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_1724315731227574291:nk]' />
              <text column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_1724315731224715280:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Country (Sheet1):nk] / ([federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk] / [federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]))</rows>
        <cols>([federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk] * [federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk])</cols>
      </table>
      <simple-id uuid='{D85633C4-05E7-4FB7-9543-943EF3DA0107}' />
    </worksheet>
    <worksheet name='Global Mortality Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Global Mortality Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.0y0pvny1ysyuq71fntzuh1u5qnp6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0y0pvny1ysyuq71fntzuh1u5qnp6'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Mortality count]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mortality count]' derivation='Sum' name='[sum:Mortality count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Mortality count:qk]' num-steps='7' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Mortality count:qk]' />
              <lod column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Country:nk]' />
              <geometry column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Latitude (generated)]</rows>
        <cols>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FBAF421A-A55B-4013-8DE3-8AB7B3251716}' />
    </worksheet>
    <worksheet name='KPI 1: YOY Performance'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>KPI 1: Year-over-Year Performance</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.0y0pvny1ysyuq71fntzuh1u5qnp6' />
          </datasources>
          <datasource-dependencies datasource='federated.0y0pvny1ysyuq71fntzuh1u5qnp6'>
            <column caption='_YoY_Growth' datatype='real' name='[Calculation_1724315731224715280]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// YOY Growth&#13;&#10;(SUM([Estimate]) - [Calculation_3187985610335686658]) /&#13;&#10;[Calculation_3187985610335686658]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='_Previous_year_estimate' datatype='real' name='[Calculation_3187985610335686658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LOOKUP(SUM([Estimate]), -1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='_YOY_INDICATOR' datatype='string' name='[Calculation_3187985610336006148]' role='measure' type='nominal'>
              <calculation class='tableau' formula='// Growth Indicator&#13;&#10;IF [Calculation_1724315731224715280] &gt; 0 THEN &quot;▲&quot;&#13;&#10;ELSEIF [Calculation_1724315731224715280] &lt; 0 THEN &quot;▼&quot;&#13;&#10;ELSE &quot;►&quot;&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Estimate]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year (Sheet1)]' role='dimension' type='quantitative' />
            <column-instance column='[Year (Sheet1)]' derivation='None' name='[none:Year (Sheet1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Estimate]' derivation='Sum' name='[sum:Estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1724315731224715280]' derivation='User' name='[usr:Calculation_1724315731224715280:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Calculation_3187985610335686658]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_3187985610336006148]' derivation='User' name='[usr:Calculation_3187985610336006148:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Calculation_1724315731224715280]' ordering-type='Rows' />
              <table-calc field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[Calculation_3187985610335686658]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]' included-values='in-range'>
            <min>2015</min>
            <max>2022</max>
          </filter>
          <slices>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='346' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Estimate:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_1724315731224715280:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_3187985610336006148:nk]' />
              <text column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Estimate:qk]' />
              <lod column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_1724315731224715280:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Estimate:qk]</rows>
        <cols>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]</cols>
      </table>
      <simple-id uuid='{A6CEE8A8-7611-4417-86D8-B9522C7887F5}' />
    </worksheet>
    <worksheet name='Longevity Outlook (60+ age)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Longevity Outlook</run>
            <run bold='true' fontname='Benton Sans Book'> (60+ age)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.0y0pvny1ysyuq71fntzuh1u5qnp6' />
          </datasources>
          <datasource-dependencies datasource='federated.0y0pvny1ysyuq71fntzuh1u5qnp6'>
            <column datatype='real' name='[Estimate]' role='measure' type='quantitative' />
            <column caption='Income Category' datatype='string' name='[Income_Category]' role='dimension' type='nominal' />
            <column caption='Indicator Name' datatype='string' name='[Indicator_Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year (Sheet1)]' role='dimension' type='quantitative' />
            <column-instance column='[Estimate]' derivation='Sum' forecast-column-base='[sum:Estimate:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income_Category]' derivation='None' name='[none:Income_Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator_Name]' derivation='None' name='[none:Indicator_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (Sheet1)]' derivation='None' name='[none:Year (Sheet1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Estimate]' derivation='Sum' name='[sum:Estimate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Income_Category:nk]' member='&quot;High income&quot;' />
              <groupfilter function='member' level='[none:Income_Category:nk]' member='&quot;Low income&quot;' />
              <groupfilter function='member' level='[none:Income_Category:nk]' member='&quot;Lower middle income&quot;' />
              <groupfilter function='member' level='[none:Income_Category:nk]' member='&quot;Upper middle income&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]'>
            <groupfilter function='member' level='[none:Indicator_Name:nk]' member='&quot;Life expectancy at age 60 (years)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Sex:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]' included-values='in-range'>
            <min>2015</min>
            <max>2022</max>
          </filter>
          <slices>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]</column>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]</column>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]</column>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]' value='left' />
            <format attr='vertical-align' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]' />
              <lod column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]' />
              <text column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]' />
              <text column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]' />
              <color column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[fVal:sum:Estimate:qk]</rows>
        <cols>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='None' range-size='5' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{76FB92E2-A433-49B3-9CE2-DE78F52AA535}' />
    </worksheet>
    <worksheet name='Non-Disease Mortality by Income'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Non-Disease Mortality by Income</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.0y0pvny1ysyuq71fntzuh1u5qnp6' />
          </datasources>
          <datasource-dependencies datasource='federated.0y0pvny1ysyuq71fntzuh1u5qnp6'>
            <column datatype='real' name='[Estimate]' role='measure' type='quantitative' />
            <column caption='Income Category' datatype='string' name='[Income_Category]' role='dimension' type='nominal' />
            <column caption='Indicator Name' datatype='string' name='[Indicator_Name]' role='dimension' type='nominal' />
            <column-instance column='[Income_Category]' derivation='None' name='[none:Income_Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator_Name]' derivation='None' name='[none:Indicator_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimate]' derivation='Sum' name='[sum:Estimate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Indicator_Name:nk]' member='&quot;Crude suicide rates (per 100 000 population)&quot;' />
              <groupfilter function='member' level='[none:Indicator_Name:nk]' member='&quot;Homicide rate (per 100 000 population)&quot;' />
              <groupfilter function='member' level='[none:Indicator_Name:nk]' member='&quot;Road traffic injuries, age-standardized death rates (15+) (per 100 000 population)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]' value='254' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]' />
              <text column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Estimate:qk]' />
              <text column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Estimate:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Estimate:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Estimate:qk]</rows>
        <cols>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]</cols>
      </table>
      <simple-id uuid='{12CD35EC-0D8E-4F8B-AB89-AC713284B1F0}' />
    </worksheet>
    <worksheet name='Regional Performance '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>KPI 2: Regional Performance Comparison</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.0y0pvny1ysyuq71fntzuh1u5qnp6' />
          </datasources>
          <datasource-dependencies datasource='federated.0y0pvny1ysyuq71fntzuh1u5qnp6'>
            <column caption='_Regional_Average' datatype='real' name='[Calculation_3187985610337386501]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Regional Average&#13;&#10;{FIXED [RegionArea]: AVG([Estimate])}' />
            </column>
            <column caption='_Overall_Average' datatype='real' name='[Calculation_3187985610337517574]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Overall Average&#13;&#10;{FIXED : AVG([Estimate])}' />
            </column>
            <column caption='_Regional_Performance_Index' datatype='real' name='[Calculation_3187985610337648647]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_3187985610337386501] - [Calculation_3187985610337517574]) /&#13;&#10;[Calculation_3187985610337517574]' />
            </column>
            <column caption='_Regional_Indicator' datatype='string' name='[Calculation_3187985610337898504]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// Performance Indicator&#13;&#10;IF [Calculation_3187985610337648647] &gt; 0 THEN &quot;▲&quot;&#13;&#10;ELSEIF [Calculation_3187985610337648647] &lt; 0 THEN &quot;▼&quot;&#13;&#10;ELSE &quot;►&quot;&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Estimate]' role='measure' type='quantitative' />
            <column caption='Region Area' datatype='string' name='[RegionArea]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year (Sheet1)]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_3187985610337898504]' derivation='None' name='[none:Calculation_3187985610337898504:nk]' pivot='key' type='nominal' />
            <column-instance column='[RegionArea]' derivation='None' name='[none:RegionArea:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (Sheet1)]' derivation='None' name='[none:Year (Sheet1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3187985610337648647]' derivation='Sum' name='[sum:Calculation_3187985610337648647:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Estimate]' derivation='Sum' name='[sum:Estimate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]' included-values='in-range'>
            <min>2015</min>
            <max>2022</max>
          </filter>
          <slices>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Calculation_3187985610337648647:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Calculation_3187985610337898504:nk]' />
              <text column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Calculation_3187985610337648647:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:RegionArea:nk] * [federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Estimate:qk])</rows>
        <cols>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]</cols>
      </table>
      <simple-id uuid='{5462AA16-803C-40CE-B00C-B9994085541C}' />
    </worksheet>
    <worksheet name='Top 5 Disease Projections'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Top 5 Disease Projections Till 2025</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.0y0pvny1ysyuq71fntzuh1u5qnp6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0y0pvny1ysyuq71fntzuh1u5qnp6'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Mortality count]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
            <column-instance column='[Mortality count]' derivation='Sum' forecast-column-base='[sum:Mortality count:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Mortality count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Disease Set]' derivation='InOut' name='[io:Disease Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mortality count]' derivation='Sum' name='[sum:Mortality count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[io:Disease Set:nk]'>
            <groupfilter function='member' level='[io:Disease Set:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Country])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:disease:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]</column>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[io:Disease Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Forecast Indicator:nk]' />
              <lod column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[io:Disease Set:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[fVal:sum:Mortality count:qk]</rows>
        <cols>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]</cols>
        <forecast-specification auto-forecast-agg='false' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' forecast-agg='Year-Trunc' ignore-last='1' model-type='custom' range-periods='Year-Trunc' range-size='7' range-type='next' season-type='ets-none' show-prediction-bands='true' trend-type='ets-none' />
      </table>
      <simple-id uuid='{8DA966B7-3534-4107-9901-7122B893ABDF}' />
    </worksheet>
    <worksheet name='Trajectories Across Decades'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Top 10 Disease Trajectories Across  Decades (1990-2010)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Extract+ (Multiple Connections)' name='federated.0y0pvny1ysyuq71fntzuh1u5qnp6' />
          </datasources>
          <datasource-dependencies datasource='federated.0y0pvny1ysyuq71fntzuh1u5qnp6'>
            <column datatype='integer' name='[Mortality count]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column caption='Disease' datatype='string' name='[disease]' role='dimension' type='nominal' />
            <column-instance column='[Disease Set 2]' derivation='InOut' name='[io:Disease Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[disease]' derivation='None' name='[none:disease:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mortality count]' derivation='Sum' name='[sum:Mortality count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[io:Disease Set 2:nk]'>
            <groupfilter function='member' level='[io:Disease Set 2:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Year:ok]' member='1990' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2000' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2010' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[io:Disease Set 2:nk]</column>
            <column>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]' value='74' />
            <format attr='text-format' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Mortality count:qk]' value='n#,##0,,M;-#,##0,,M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-orientation' data-class='subtotal' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]' value='-90' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]' />
              <text column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Mortality count:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Mortality count:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Mortality count:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Mortality count:qk]</rows>
        <cols>([federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[io:Disease Set 2:nk] / [federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk])</cols>
      </table>
      <simple-id uuid='{FE1C9912-7FD3-4F92-BA12-B05A226F6A6A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='1400' maxwidth='1700' minheight='1400' minwidth='1700' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Extract+ (Multiple Connections)' name='federated.0y0pvny1ysyuq71fntzuh1u5qnp6' />
      </datasources>
      <datasource-dependencies datasource='federated.0y0pvny1ysyuq71fntzuh1u5qnp6'>
        <column caption='Income Category' datatype='string' name='[Income_Category]' role='dimension' type='nominal' />
        <column caption='Indicator Name' datatype='string' name='[Indicator_Name]' role='dimension' type='nominal' />
        <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
        <column datatype='integer' name='[Year (Sheet1)]' role='dimension' type='quantitative' />
        <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
        <column-instance column='[Disease Set 2]' derivation='InOut' name='[io:Disease Set 2:nk]' pivot='key' type='nominal' />
        <column-instance column='[Income_Category]' derivation='None' name='[none:Income_Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Indicator_Name]' derivation='None' name='[none:Indicator_Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year (Sheet1)]' derivation='None' name='[none:Year (Sheet1):qk]' pivot='key' type='quantitative' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98858' id='9' param='horz' type-v2='layout-flow' w='99058' x='471' y='571'>
            <zone h='98858' id='7' type-v2='layout-basic' w='99058' x='471' y='571'>
              <zone h='11306' id='5' type-v2='text' w='49529' x='471' y='571'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='20'>DASHBOARD</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38215' id='6' name='Global Event Sentiments' w='43827' x='471' y='61214'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38215' id='11' name='Trajectories Across Decades' w='42633' x='49997' y='61214'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30715' id='15' name='Global Adult Mortality Ranking' w='40406' x='471' y='30499'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30715' id='18' name='Global Indicators Performance' w='42633' x='49997' y='30499'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18622' id='23' name='KPI 1: YOY Performance' w='40601' x='471' y='11877'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18622' id='26' name='Regional Performance ' w='43432' x='49997' y='11877'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11306' id='29' name='Gender Disparity Index' w='24764' x='50000' y='571'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38215' id='10' name='Global Event Sentiments' pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Outcome:nk]' type-v2='color' w='5699' x='44298' y='61214'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='25930' id='12' name='Trajectories Across Decades' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]' type-v2='filter' w='6899' x='92630' y='73499'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5786' id='13' name='Trajectories Across Decades' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[io:Disease Set 2:nk]' type-v2='filter' w='6899' x='92630' y='67713'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6499' id='14' name='Trajectories Across Decades' pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]' type-v2='color' w='6899' x='92630' y='61214'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11500' id='19' name='Global Indicators Performance' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]' type-v2='filter' w='6899' x='92630' y='42570'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4927' id='20' name='Global Indicators Performance' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='6899' x='92630' y='37643'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7144' id='21' name='Global Indicators Performance' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]' type-v2='filter' w='6899' x='92630' y='30499'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16715' id='16' name='Global Adult Mortality Ranking' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]' type-v2='filter' w='9120' x='40877' y='44499'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14000' id='17' name='Global Adult Mortality Ranking' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]' type-v2='filter' w='9120' x='40877' y='30499'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7144' id='22' name='Global Indicators Performance' pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_3187985610345586705:nk:1]' type-v2='color' w='6899' x='92630' y='54070'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='12479' id='24' name='KPI 1: YOY Performance' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='8925' x='41072' y='11877'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6143' id='25' name='KPI 1: YOY Performance' pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_3187985610336006148:nk]' type-v2='color' w='8925' x='41072' y='24356'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='12479' id='27' name='Regional Performance ' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='6100' x='93429' y='11877'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6143' id='28' name='Regional Performance ' pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Calculation_3187985610337898504:nk]' type-v2='color' w='6100' x='93429' y='24356'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5653' id='30' name='Gender Disparity Index' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]' type-v2='filter' w='24765' x='74764' y='571'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5653' id='31' name='Gender Disparity Index' pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Calculation_3187985610341589008:nk]' type-v2='color' w='24765' x='74764' y='6224'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2950' minheight='2950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='57' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98858' id='56' param='vert' type-v2='layout-flow' w='99058' x='471' y='571'>
                <zone h='11306' id='5' type-v2='text' w='49529' x='471' y='571'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='20'>DASHBOARD</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5653' id='30' mode='checkdropdown' name='Gender Disparity Index' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]' type-v2='filter' w='24765' x='74764' y='571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='150' h='11306' id='29' is-fixed='true' name='Gender Disparity Index' w='24764' x='50000' y='571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5653' id='31' name='Gender Disparity Index' pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Calculation_3187985610341589008:nk]' type-v2='color' w='24765' x='74764' y='6224'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12479' id='24' name='KPI 1: YOY Performance' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='8925' x='41072' y='11877'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='18622' id='23' is-fixed='true' name='KPI 1: YOY Performance' w='40601' x='471' y='11877'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6143' id='25' name='KPI 1: YOY Performance' pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_3187985610336006148:nk]' type-v2='color' w='8925' x='41072' y='24356'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12479' id='27' name='Regional Performance ' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='6100' x='93429' y='11877'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='18622' id='26' is-fixed='true' name='Regional Performance ' w='43432' x='49997' y='11877'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6143' id='28' name='Regional Performance ' pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Calculation_3187985610337898504:nk]' type-v2='color' w='6100' x='93429' y='24356'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16715' id='16' mode='checkdropdown' name='Global Adult Mortality Ranking' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]' type-v2='filter' w='9120' x='40877' y='44499'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14000' id='17' mode='checkdropdown' name='Global Adult Mortality Ranking' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]' type-v2='filter' w='9120' x='40877' y='30499'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='30715' id='15' is-fixed='true' name='Global Adult Mortality Ranking' w='40406' x='471' y='30499'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11500' id='19' mode='checkdropdown' name='Global Indicators Performance' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]' type-v2='filter' w='6899' x='92630' y='42570'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4927' id='20' name='Global Indicators Performance' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='6899' x='92630' y='37643'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7144' id='21' mode='checkdropdown' name='Global Indicators Performance' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]' type-v2='filter' w='6899' x='92630' y='30499'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='30715' id='18' is-fixed='true' name='Global Indicators Performance' w='42633' x='49997' y='30499'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7144' id='22' name='Global Indicators Performance' pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_3187985610345586705:nk:1]' type-v2='color' w='6899' x='92630' y='54070'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38215' id='6' is-fixed='true' name='Global Event Sentiments' w='43827' x='471' y='61214'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='38215' id='10' name='Global Event Sentiments' pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Outcome:nk]' type-v2='color' w='5699' x='44298' y='61214'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25930' id='12' mode='checkdropdown' name='Trajectories Across Decades' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]' type-v2='filter' w='6899' x='92630' y='73499'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5786' id='13' mode='checkdropdown' name='Trajectories Across Decades' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[io:Disease Set 2:nk]' type-v2='filter' w='6899' x='92630' y='67713'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38215' id='11' is-fixed='true' name='Trajectories Across Decades' w='42633' x='49997' y='61214'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6499' id='14' name='Trajectories Across Decades' pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]' type-v2='color' w='6899' x='92630' y='61214'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CBBC1E53-FB0B-42E0-9289-7714612CE742}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Global Mortality Map'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Mortality count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Country:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Impact:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Name of Incident:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Outcome:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Type of Event:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Mortality count:qk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year (Extract1):ok]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D9F09F7-94D7-4660-88B7-683C1D45E9E9}' />
    </window>
    <window class='worksheet' name='Global Event Sentiments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Outcome:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[io:Country Set:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Country (Extract1):nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Country:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Name of Incident:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Outcome:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Type of Event:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[sum:Sum:qk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{736F85FA-A179-48DC-8D25-8E56FE353714}' />
    </window>
    <window class='worksheet' name='Top 5 Disease Projections'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]' type='filter' />
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[io:Disease Set:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[attr:Outcome:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[io:Disease Set:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Country (Extract1):nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Country:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Impact:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Name of Incident:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Outcome:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Type of Event:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F24BA3EA-B99B-4000-A797-1145BC939F44}' />
    </window>
    <window class='worksheet' name='Disease Pareto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Mortality count:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Mortality count:qk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4B44146-9E26-4D9C-8A41-0C9052AD6AAE}' />
    </window>
    <window class='worksheet' name='Trajectories Across Decades'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]' type='filter' />
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[io:Disease Set 2:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[io:Disease Set 2:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Country:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Type of Event:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:disease:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6ADC603E-5E6D-4AC0-A5B3-1A4A3838DF5E}' />
    </window>
    <window class='worksheet' name='Global Adult Mortality Ranking'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]' type='filter' />
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Country (Sheet1):nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Group - Sex / Age:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0390DBCD-2CF3-4ABF-B235-85EAAC80CC71}' />
    </window>
    <window class='worksheet' name='Longevity Outlook (60+ age)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]&#10;[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]' type='color' />
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Forecast Indicator:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:RegionArea:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C13E8D2-499E-47CF-B672-A189F64FD341}' />
    </window>
    <window class='worksheet' name='Non-Disease Mortality by Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDC67883-AFF7-4C33-B855-4AC7EAEA906F}' />
    </window>
    <window class='worksheet' name='Global Indicators Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]' type='filter' />
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_3187985610345586705:nk:1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Country (Sheet1):nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:RegionArea:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_1724315731227574291:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_1724315731228258324:nk:1]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_3187985610345586705:nk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDE88BE7-7C6E-43A3-BF0A-605C3AEEC69C}' />
    </window>
    <window class='worksheet' name='KPI 1: YOY Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_3187985610336006148:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Indicator_Name:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_3187985610329489408:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_3187985610336006148:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7028DE6E-50A5-41FD-ABC0-04CA69B3EF21}' />
    </window>
    <window class='worksheet' name='Regional Performance '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Calculation_3187985610337898504:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Calculation_3187985610337898504:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:RegionArea:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC487A67-3BAB-44AF-A38C-2CC407B46808}' />
    </window>
    <window class='worksheet' name='Gender Disparity Index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Sex:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Calculation_3187985610341589008:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Calculation_3187985610340667405:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Calculation_3187985610341589008:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Income_Category:nk]</field>
            <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Year (Sheet1):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A243A90A-D908-44BC-A02B-5F13759A1D85}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Gender Disparity Index'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Calculation_3187985610341589008:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Global Adult Mortality Ranking'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global Event Sentiments'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Outcome:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Global Indicators Performance'>
          <highlight>
            <color-one-way>
              <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_3187985610345586705:nk:1]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='KPI 1: YOY Performance'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[usr:Calculation_3187985610336006148:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Regional Performance '>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[none:Calculation_3187985610337898504:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Trajectories Across Decades'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0y0pvny1ysyuq71fntzuh1u5qnp6].[yr:Year:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='18' />
      <simple-id uuid='{1B53FE3D-7CD9-4158-A591-AA8356A8AF09}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Disease Pareto' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Gender Disparity Index' width='188'>
      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
      eDGKghejKHgxioIXo+jHg6XBxs7/yNNTuG5bVjxV57GO8GIUBS9GUfBiFAUvRlHwYhQFL0ZR
      8GIUBS9GUfBiFAUvRlHwYhQFL0ZR8GIUBS9GUfBiFAUvRlHwYhQFL0ZR8GIUBS9GUfBiFAUv
      RlHwYhQFL0bxzuDdZRzKXMMrs5LIvY5hzuK9fLB0NssyTzTa1KR587LfPOam7FAWKUnbKb07
      nBB3A4c5i9n70XrS/zuY/re3bdQZSvPmZUf4g2R9AQ/NW038sxGENHDUiW+38lPv51m1Yg4P
      d2v4rdGl5fGyI3w40XPCr3tU2IPTeLYRZiPex8uO8CI3xsuO8I3r4v08L1XfPUjFO1z6vVPw
      v1Pf3focDgdBQUEemI3cDJd+77SkEaMoeDGKghejeNcaPjeJGev31Nm0Z8aFx50fZ+niKMI4
      QeayePYOWsriqDC48Pjvx34/Kp4Zfz//p8gXNhDbvykmL82Bbj1/Dbr1/G90jycRL6PgxSgK
      Xoyi4MUoCl6MouDFKApejKLgxSgKXoyi4MUoCl6MouDFKApejKLgxSgKXoyi4MUoCl6MouDF
      KApejKLgxSgKXoyi4MUoCl6MouDFKApejKLgxSgKXoyi4MUoCl6MouDFKApejKLgxSgKXoyi
      4MUoCl6MouDFKApejKLgxSgKXoyi4MUoCl6MouDFKApejKLgxSh+np7AH+Iu41BWCknb2vD0
      ulj6N2BIxeFMUpI/Z/+palr9qR+PTJlMVPc2jT5VaV68LHg3ZYeySEnaTund4YS4GzjsRBYJ
      CT/S76XVzLzTH+fRTN78twRsC+YzKqxRJyzNjJctaQ6S9QU8NG818c9GENKgMW4OfpVFu4lx
      PHpnADZsBNz5KHET25H11UEa+ndGWgYvCz6c6DlR9An2v44xv/JT3p1EDKi7fGkzIII7837i
      15s7QWnmvCz4P+IMpZUdCA64ZHNAMB0qSznjkTmJp3jZGv4PCg7mlss23kJwcN0tDoej3uHl
      5eWNMStpApd+78wIvrSU00Dd89PTlJbCbb/bEhgYeNlQh8NBUFBQ485PGs2l3zsDljTtCQ4o
      obTyks2VpZQEBNPeI3MSTzEg+K707nuUfT9W1Nla8eM+jvbtTVcPzUo8w4Dgbdz14CjKNibw
      6dFK3LipPPopCRvLGPXgXdg8PT1pUt61hs9NYsb6PXU27Zlx4XHnx1m6OIowTpC5LJ69g5ay
      OOrCqj1sFHFxblLefZlZF6+0xsXpopOBfCzLsjw9iebM4XDUezJrorHzP/L0FK7blhVP1Xls
      wJJG5DcKXoyi4MUoCl6MouDFKApejKLgxSgKXoyi4MUoCl6MouDFKApejKLgxSgKXoyi4MUo
      Cl6MouDFKApejPL/VMqOlv28gfAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Global Adult Mortality Ranking' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global Event Sentiments' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global Indicators Performance' width='192'>
      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
      nUgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Global Mortality Map' width='192'>
      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
      1osAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='KPI 1: YOY Performance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Longevity Outlook (60+ age)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Non-Disease Mortality by Income' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Regional Performance ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 Disease Projections' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trajectories Across Decades' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dSYwcWXrff7FkRu57LVmZtZFVRTa7Z3qb7pnRSJA08mhG0szIggXZMAzd
      DAM++OCzYQs++eCzIcALdJF8sLXAGmm0jUaj7ll7b5LNpYq1V+77FpkZmw9FVlc1i2RmZFYl
      yYof0EAyOuKLl1nv/5bvfe97gmVZFg4OFxRx0gVwcJgkYxeAqqrouj5usw4OZ8LYBWBZFhd2
      VKU1+el7N09c6jWLfPjJFuXMNm+9/TafbOwe/b9S/oB272Rjcfvj99jOFMntb/PHf/wn7OfL
      p75q/94NfvTeTXI763zve39PqaFS3LnFd/76exwUqly/efPU5x5Hr5Hnw1vbAPz07X/g7bd+
      QL7a4cb160PbelaQJ12A5wqzx+7+Pvv3bmIpfn77N3+Du7fXWfrcF/nh3/4Fv/bNb/MX3/l/
      ZHfWCbghm8sRvfQaP//5Rf7mb76P6AmSufcxv/wbC8yml3B/cIOw2OG7f/0+gUCAXHYfWQny
      W9/6BlNTEX58Y512ts3rX/wcH9y8y2V/k4XVa7z/zk/xe9185+5NVj7/JpvX30UVA3zu8gw/
      +WCdS4sxTHccn1FjYzvL1/7p7xD3yWysb7H4wusAFKtNfv0bv8Jf/t2P8LpFNv7PH/HiF36O
      W++/g+WLsZoM8u6dAy5PeREjKWhm2Tqo863f/i2C7menWjlzgDPA7QujSCaWZVDvQcQjEfG5
      2ctmQfLQbtYpFYtMzySZmZ7G0DqYkp9uu87M3CLzc1NHtjr1CsGpOeqVAoLsxTJ6AJiGQbfb
      xeOR2dvPEgyFAYty/gBvKEan02FhPs3t2zfJ5CpcXl7k1t0NzHabqfQCu3fusLG7x6W1FWRB
      AMukqhpEfS4ALMMgt79NMDZDp9Nifn6eOzevky23WF5McXdji067QWp+gbu3b7O3d8DqymUk
      UZjET24bYdxeoE6ng8vlwuVyjdPss4GpU210OKwDFpJWZ7Mi8Pm1eSzTYHtri+TCMp1qgY4u
      MJOIkitWmE/NUspnkbxhREsnFAojCFCv1wmHQhzs7RCNxfiz7/wVX/v6N5iKhjjY2aSpaiws
      LlAolFhYSKOpTfbzNZaX5mk2GnRbdURvBJep0tJEfLJBVxcJ+GTK9S7p6TA7BwWWl5folnfZ
      qEq8vJYGoJzPUO9aLC+maNTrtBsVlNAU9Jr0cOMyu2iiQkC2qKkGM1Hf0btF4dkRgSMAhwuN
      MwR6TqiXyji+t+FxBPCcUCuVqVcyvPfBRzR75qSL88zgCOA5wtB6pGYTNFSnLxiUZ8df5fBY
      EnOzSG4RyxKxJOfPOihHk+BmszmWBaxer4csy0iSNLItB4ezxvECOVxonDmAw4XGEYDDhcYR
      gMOFxhGAw4XmTP1l2XIT3Rh+USboU4gEPGdQIgeHk5ypAP7T//oH8tX20M/9s198gd/9+stn
      UCIHh5M4QyCHC40jAIcLjSMAhwvNUALodxr87L2PKWb3+Pjjj6nUSrz/4W0svcMPf/r+WZXR
      weHMGGISbLF7kCPkV2h0elxbXWIzk6HXVtnfzxII+TFNE9M0MQwDYYRdQZZpOpklHM6FwQVg
      Glimyf7eAQsLc2xs7eKPhknOuNkttkmE3YiiiCiKSJKELNt3MAmiONLzDg6DMngtE2VWr1zl
      0soqoiDQ62soigvLgrRpjtTiOzhMiqGb2Qdhzh6PAoAggCg6c2mHZxOn5jpcaBwBOFxoHAE4
      XGgcAThcaBwBOFxozt3ZHg16WEvH6fQ0qs0u+8XGeRfBweGIc+8B6q0euWoLzTBxy04H5DBZ
      zr0GehWZZCxA0Oum0emf9+sdHE5w7kMgw7RoqRrNTu+ZS6Xt8Pxx7j1ALORFEMAlS0xH/ef9
      egeHEwzVAxRz+/QsN/GAi52DAumFNN2ORjweJp8vMDs780QbtaaKphvIkkjA67ZdcAeHcTBU
      DxAIx2kUM9zb2kH0+JCFPrfvbKFWMtzezQ1ko6cZaLqJ2tNtbZh3cBgnQ/UAvU4DzRK5cu0l
      9Gae7YMCEY/E7bxKMuIZaD+A2yXx0qVpdnI1fJ7T0yc6+wEczouhBFCr1lA8PhrlLMVynfml
      NFZCoFqv4fMpA+0HUHs6b398eFLifuH0NQBnP4DDeTFULVtauXL0eXo2dfQ5HAnaevkFPUzV
      4SnCWYlyuNA4AnC40DgCcLjQOAJwuNA4AnC40DgCcLjQOAJwuNA4AnC40DgCcLjQOAJwuNAM
      JQCt36PX17BMk263h2WZaJqOZVn0+87uLodnj6FigcrFAplsgWAkiNHv44+E2LpX4suvLfD9
      dzb4+i996azK6eBwJgwlAI/iRrPAtARWlhfYzGTwuwQ2DhoszEWd9OgOzxzDhUPXangVNwGv
      wifr26QXUkT8JrlShUjI+1A49O/tfQ+9UBi6UKHPfRtZfnXo5xwchsV2OHQqvXD0eXp2anwl
      cnA4RxwvkMOFxhGAw4XGEYDDhcYRgMOFxhGAw4XGEYDDhcYRgMOF5tR1AEPrUmv38NLD8k/j
      Pz1/lYPDM8+pPcDW7Q/5kz/9M7731rs4x/86PM+cKoBLV19hfioMmJhO+k6H55hTh0CWqWEI
      LtLpFM4hLg7PM6dWb0F041ck8vkCxxM472/f49adDcq5A27eukOjVePu+i6WqXH9xq3zKrOD
      w9g4PRhOlFhYXOZge4OuCQ+OsUimF2jeuUO9ZWFZBoahUSiUiXkNVIuHwqEty172T9MJh3Y4
      Jx4xBDLY3rpH1/IQPHaGxb2NuyytXkXrthG0DgfFCrNRH+sFlVhAeigc2u6eANHJDu1wTpxa
      ywTLoK120TSVngHu+wMlxe1ib3eXdHKKXEVndfkSug7TvS6yLJ1nuR0cxsIjhkAiiltBEEE6
      1ogvXlo7+nzJf5gSXZJAUQZfKBAjEZSVy5iqilGtoWcy9kru4DAGTh8CGRqpy1cJWy26BvjG
      OBoxGw30QgHB40VwO2eEOUyWU71AostL5eAe13cqJ+YA40DweJBnZhADfsxmc7zGHRyG5BGT
      YIvltZeYSyYZ+1G+hoGeyyP6fWDTS+TgMC4esQ4gUsvt8Pu///v8+IOb432h349yZQ33pUsI
      Pu9YbTs4DMupPYBpaJQaKv/8X/4r9F5nrC80KhXU9z9AeeEF9Ex2rLYdHIbl1B4gs3WbXLnG
      j7/3XaTwkw+/HgpJwjIMujduoFy98uT7HRzOkFMFUFd1vKKOLnvwjDsWyLKQgkHMeh2zPd7e
      xcFhWE4dAoVDYVbWroEg4Br3+pZpou3vA6Dt7IzZuIPDcJw+BzAN7t29RbXVZX7lRRRnkddh
      THz3p+u2QuxfWp5icTYy9vKcKoDU3Czv/fQtIrEFnJA0h3Hy3//8fQxzePf3v/n262cigFNH
      +JLbz8/98q8RCfjwH5NIuZBley9DX21xb3MbTeuSy5exLJO9/YOxF87B4aw5tQfYXb/OWx9u
      EHZBS+NoCOTxBamUt9loN0lPR9g9OCB70CAgqmzlqqRTc0c2LMvC7jKXZWE7lNrh+cSyrDOp
      E6cKYDo5z2xO5ee//AYe5dPr5UKWyMwC9Uoet9uNaZrEfDJ38iozIfdRQR/sC8CmBCys+887
      OBzyoF6Nm1MF4PaFqOyv8zd/U+WrX/8mgfvxQGpXpVspkZyKs7lXZPlSGi1h0WjW8XoUBEFA
      EISjPQECNvcDCAKS5My8HT7lQZ0aN6cKQBRFpmZmaGsS7mN3XLn2+aPP18IxALwKhEL+z5pw
      cBiYkE9hLnEYXl+qdyjVz2996NRJsKn36OoCHkulpZ1bWRwuKIIIbpeIIICmG+f67lMF8P67
      7yAKBj3Ri9fJCuFwxqg9nZaqIQgC3iE2V42DU4dAsXgCXWzR7XZte3IcHAYlEvAQC3rRdOPc
      vX+ntu+lQo5isYggK0hOD+BwxrhliUqjgygKhPzKkx8YI6dW70AoTDQaRRYsJzOcw5nT6Wlc
      TsXwuGV043wr3KlDoBdfefNcC+Fwsak0VP723c2JvNsZ4DhcaBwBOFxoHAE4XGjONP/gzwJp
      Wl3f0M+9qERxzol3OA+GEoBp6GgGSOjUGi1C4TCGbuLxuOl0Ovj9J0Mi/jJ6hTztoQtl+mcd
      ATicC0MJIL+/TqUfxmdU0ZUgHg+8/8EuX3o5zY8+2uFrv/DGWZXT4TnhP+7/PZaNcId0cwZY
      HXt5hhJAci5NY7fFTHKeQi5DrqQRVETWs03SM6GH0qPbxXLSoz+3xLQOGMMLwG30zqRODCWA
      vd09KhWNsDdOS9WYSSeI+CIUKlWCAf9D6dHtIjjp0R0+w1mlzB/K4vzla8xfPvw8O5c+up6Y
      jo+1UA4O54XjBnW40DgCcLjQOAJwuNA4M02HpwPxflt8mBLk3F57pgL4ldeXaXT6Qz83FRl+
      9djh2UVOpfC+9ip6Nkt/ewejVDq/d5+V4a2tLUytS8DrGfpZSXRGZhcJ/eCAVrmM97VXkcKh
      50MA7XYbtVWjq5lIkgtD79Np1fEGwhhaH7fHR7tRxReM0GnW8PpDdDtNAuE48dD8WRXL4Snk
      QQ+g7e1hNM732KwzEUCr1aJcLtOqlXEHE7QaZQxNQ/H6MXWd2Mw8hf1NOs0akuwiGElQLWaQ
      XW4Ep/W/eBg63evX0bbPP1v4mQhAlmW+8pWvULY+Qe2bKF4/sluhUc4RjE4jShKh2BSBcAwL
      i8zWLRbWXkbtNPF4nRxDFw0xHEbP5lBevIZeKGAUn/EhUD6fRxRFbtzZpNH+zCQ495kuzjIx
      CfPJvT1AgGydtXSMzfi4T+dzeBrItFoPxQKJd+5ittuQyYAgnOoFqmdz+DfHv23yTASQSqWQ
      ZZnd2sfkK4N6gT7dDP3ilSjz88484LnE58P6bDCcaYL38QcmRqemCJ5BnRhKAIWDTVQhQtjd
      Zy9XZnEpxf5elRfW5vjg+jqvvfLSoVFZxuVyIYoSojS8xqT7zzs8f8iiaMvP75KlM6kTQ9XO
      aCxKNdNF77S5einNdi5HtdKhkAFTlp1waIczwzyjOjGUAAxDp9frIcs6xXIV2aWQjIvcK3SI
      B2UnHNrhzHgqwqEbzT6RoIvkzByVWoPFRARdhxm9P/DilSgIKPdTThuGSf+ck6E6OBxnKAFM
      J1NHn2emEwC43eB2D24mEvDwlc/N0+lqXN8qUKgOv2fYwWFcnPs4o9JUeevjXRZmwkxH/Y4A
      zgDTtPi/P/jE1rNvXE2xnBz/YXRPK+cugHjIy+tX5shXWtSa6nm//kJgWhZ/+LfXbT0bD/nO
      VAD7StjWpniXqBA8g/KcuwB0w+SjezlSiRBuZ6J7rvi9LuKhw0jbWrNLo9Mb6Ln/8odv23rf
      N764wisrsyeu/de5X7B3TGpgjqStUjyec6+BkiSylo5Tb3UJ+tzn/foLjU9xMRcPoPZ1aq3u
      wM/9+Ob+qdfF+67uR50I+uraWVTZ8XL+c4CGyvt3s3gVFyMsFYxEvd211Qp5XDI+z7O7QFdt
      dsmWW4QDHgIeN432YD3AaSzOhHltLclBqclmpnqu53qNk3MXQNDn5pWVWWqtLpGAh2Jt97yL
      wH/4H99nN18f+rlvfnmVf/2t18+gROfDbCxAMh6g09VGPotrJ1+nUGvzxtUU4YDiCGBQmp0+
      1zcL1Fpd4qHHx3+cJ15FZi0dx7Qsaq0ue4XGpIs0dg6PHxLwelwE/QrFESrt4kyYV1eT7Bbq
      NEfoSSbNRGahD8af5cbT4wUyTIuupoMFPe35XJxT3DLr+2VkSSQRHm3baaWpspWtohvmSGEv
      k8Zxw9zHNC1M00ISxcOArQH5b3/2DpnS8LuY3nwhxbe/cmXo50ZhM1M9+pwfcf0llQiRq7QI
      eN1MRf0j25sUjgDuo7gkAl43hmkhy4MLYH2/cqJiDUoqERr6maeJe5kKlgXFWhu/59n15tkS
      QLNaZD9fIT0/R72mkpqLs729z/Ly4rjLd2645EMBiKKALIm2JslPCwIWv1DfsvXsjHZtoPs0
      /dP9G011+MwfTwu2BFDMF0DyIFh9trcPCMpdMtUmS0vWoU/YsjBHOF5y1Oftcme3jCBANHj6
      5NyyeLhcNnPYWJzhdzRNfqdsbyU42v3yQ+X63cJ7tmytdpYwzeUn3udxy0SDh9lDmp0+rVME
      dVZ1wpYA0pdW6bcr7OdKJAJu7hZUEoFn1z8OnFgYelbHs0/CtbiAa34eo1pDz+cwSuWBnnuj
      dfDQNcHtRgwGADA7Kpb6sEMjqg32OwZ9blZSMdSezsZBZaBnxoUtAaitOrlik8WlBQwNWu0m
      iuJCEISj/8QRsjuM+vyT8Jg6XmP4btuN+VC5PJZhy5ZiPWxrXFiPaCm1nV1MVcU1l0L0B04V
      wKC/vRSNoly9gtnu0FtfP1UAg9oqNw49SrGQj5BfOXWV+qzqhC0BhGNThGNTh/9QIBB4evz5
      g/DvM2+j7e2dvCgICJ77SbwMA6v/cKUOvGABJ0/B+XeZH6LtbA9dhsCqDnxx6OdGQZ6bw3Pt
      GkazgVEdfuJ+HL1QAFFAnppCCoUw6/bnTLOxAIuzERrtHr3++e4EdJLw3EcMBgn80i/i+9IX
      kaLRSRfnTDCqVbT9fcxWm1HjUFypOdxLy1iGgXlK6z8Mfc3AMEy8bhm/93w9Ss+MG/S7P12n
      aSPP6JX5OC9/JiLxNMxGg/YPf4QrnUaenkLP5+0U86nGtTCPpetgGrhSKXojtNpmr4+l9REU
      D6LfP1I6Q5/HhQXIsohPGXwu+Z//4Ae2dhT++pdW+bmXDjNMPDMC+PMf3uXAxoLTb/78lYEE
      IIbD+N74Anouj1Gt2SniyPzPv/iAg+LwIRivrs7yrQEW1fRc/nBoZ1lIodHWIcRAgP7mFoKi
      IEVH2z+wm69zUGwgCgK6Mbin58ZWwdaq/ZsvfLqz8ZkRwFljaX30SgXtYB/RH5hIGdY+/Eem
      7g0fHDjPmzCAAI6P0/Xu4OHQp6Ftbx+5gMfRWxqmhXFqUPXZ8swI4JV2lvnGYG674yz1Zga6
      T/R40bM55GQS0R9A2z89Bv4sWVVL9DvZoZ/z904OZSxB4MfBBVtleFMO8Fn5l+UB4oZOmU36
      RPkhW+Pki609+j1t6OeS/ZWjz8+MAL5ZuYVeGr5yBFupJ98EGJUKyDJ6NovgHzw/6V9F18i1
      wieuCQKfBohZh1sUP8trwTRfH/gtw2Ei8EdTrzx0fSbqJxkPYpgmuUqLYu3haNCEJ8Znl65+
      b+GfPHSf4pII+hQA2t0+au9h782/DaTO7DsC/E7pOlZv+EjUiPr5o8/PjADGyV9HVil1njBu
      PeVYg9f8c3z1M9c+9ifZDJ28OeRX+NUvXGK/1CRTbLJbeHiyGVFiQ5Z6dJqdPmF/H1EUMW1s
      CDpONOjl2tIU7W6fO7vlUwXwLHAhBfBeIMVuePjOOeyJPSSA02i0e/zpW7d5/cociYj3VAFM
      AlkSUdwyhmmhjxhWkK+2EEWB6aif8CMWr54F7MUCZffIFqukF+bY3i7x6ksL/Oi923zli6+N
      u3xH/MHM6xSE4b0zvxy+xG+eQXkeR8in8KtvXuag2CBXGdxH/r+nXmGnM/w+2i9FVvkXA9wn
      yyKGYSGKDBXyfRrpqRCLsxHqrS6qjXH4OPhudA3dxru/4onx8v3PtgTQ6PS4trrEZiZDr62y
      v58lEDrbvP777jAHnuH/aJ+Xz3+VutPTuLtXZmO/gt87uF874w6x5Rn+D3rZNdhvHw14iIcP
      fw/LGm1DUl836PZ0NrO1wzPdTplPnDV/F16x5QZNK5HRBCALJhtbu/ijYZIzbnaLbRLhZzcm
      fNxEgx7K9Q5rC3EEgVMnm5NA7et8dC+PKAjERtyO6nEd7i5bTUWRJYnt7GTWTkbFlgAWllbo
      9TUUxYVlQdp8trfFjZtirUPA6yJfbTMbm8yawmkc37k26ph9J19HEOCje/mRh1OTRLAOd0rT
      bDbvb5oejcPs0TKSJPGzWweoNoKbFqbDLCcjWJZ1JKx3bmfo2BjvzU+FuDR3Mrbn3TsZ2t3h
      baUSQVZSJ70379/N2toQMhcPspo+tPXge36wnhs4WdVxkrEAa/PxI1sA//ixvWwbV+fjzMQC
      J377H3xk7+yutXScZPykrbc+3j3VLfwkVlMx5hLBE7bevr5rK73NylyU1FTo0JY1jlp/jE6n
      g8vleuxhBpah0e3rtNoqiUSMR/Ud5v2eZRy9y4Ov+TTasixrLKG+47RlmuML136abU3EDdos
      5bi9X8YluYgmYo8sxOO+6Pr6XZaXLyFJ0lFFPDg4QOu1EdwhFtMn438Gqay9do18uU6p0ubl
      V64hPeK+QWz1Ow3ypSqFcotXXn3xsbYeb89kZ2cfdJVSo88rr35uaFum1mN7dw9/KEoiHr2f
      yt7i4CBDp14gML1CMnEy8+YglaxeyFJRDxuzF1YvPfK+QWw1ilnKqk632+fq2uVHNoqD2GoW
      s5RUA1Xt8cKVx9uayOAtmJhGtGAmGX/kH/NJGN0Wt++so2qf+rPNfgdL8iJiz8ctCCLFYpVY
      dPQ0rIIgUChUiMdG3fxuUSsVqHUh7JHtfbP7oqiWi6zf+3SvcLdVxRuMYtlcFBMEi3qnT2AM
      2fJEUaDe6hIYQzi0KIlUG22CA9iaiABapQI9zaJcLGM3A0+9uIcoydSPhUibpoHaVtFtZj2z
      LBO1paIb+shhWZZloTY7aIZuU44PkFhdW8HrEogm09ipaqbeQ/KEuHr1KldXLx9dF0WZjtrH
      bzNHq2Ho+LweovGEreePo/c13C4BSxxdTKZh0Ol0BzpSaTI9wHSK+ZkAvmDU9hgstbhGt6cT
      DypH19weD7VyEdGlPObJRyNKMpJoUG+pI/8woiQhyxa1Zsd2L3eIweZ2htW1VUr7u9hZchIl
      N61qjvWNTY4lc6BWbyBJEqLNqYw/ksCNTqs1hj3UVp9mu4/x2RMkbSC73Vhah/YA4RkTEUAj
      v0+51aNaLmM3gqTSaBHwShjGp2215PKxuDiHS7ZZ5SxYXr2MIo9ng//S6mU8I9uysHSN9bvr
      qF3NVm9imX00Q6DTanB8tLMwn0bTDVxuez1AvZBlr1CjXh19I7uhW3i9Cu4RT4I0jT59Q2Z5
      cZ5E/Mk7+yYigEB8GkvXiUVDtlrHfGaPTu/hlqJVK9PRLHodey2SqffZ3tlHcUkjDlvA1DW2
      t3YPY29GsiQSCvkwTRNvKGirxxQEEUkSkSSZ4zPCXLHKpXSEnf3hw8wBwokpfJKJ7BktzSJA
      aDpJKh4Z+XcXRBei2cMXnWJmKv7E+ycigGa5QLPdo9Fs2aoc0VgCr9eDTzZpHvPnu90uWvUa
      2Gx1RUlGME3avd4jPQeDIkgyogWdbnfEH1lk8fIKSwtpFLe979WslpC9IRQZHkyPNE0nHvFz
      cyPHwtzwe6ANvceNDz/G5Q9QrYy2wR6gms1wZz9LqzZabyIIAi6vwvbdW2zvZZ54/2TmAPEZ
      rl1ZJhC01wOYpgGWieCNkTg2B9BMEZcE/Z69TGWGruH1eui01ZEnwaau4fEptNvdEVs1g3d/
      8mM27q1jCF578wnJjVuC6HQK7/0uxDB0EN0szc/S6Qy/KizJCqtrlxEtC7fNIdRxojPTuE0d
      l3JKHPqwZZPczExP0Wm3nnjvRATQaze4dXsLy+zbqhz7e7tE4lPUihlaxyY68WiQ2HSamSl7
      WR0Ufwi/P8Da2vKIE1dw+4L4fQGuXFkeabHF0E1WrrxAwB+g06za6jH9fi/72+vc29yi/+AH
      N/rc/OQ2+Xyevm5P7qZpMjWb4sWrK0+++QlUcjkM2U2vO3rG8AdZ94wB9hdPZCFMVjwoLot2
      V7OlQE3TmIklMFo19GOT4FyhgNazqLk8RMLD+9/VRoVMpkizqxKORm25HB/QbVbJ7BdodruE
      olHstpGiJKH3uyC6iMa9YJow5EqoIMrMpeZptT4NyvP4Q7z00otMxQLUu/bkrvgC7G9v0+sk
      WEg9OfHAo7Asi3h6CV+3S9emGB9gmhqdtkqn00FxiWTzJeZmHu2mnVAP0CIcj9FX+7ZatKvX
      XqJeLhBLXSLm/7RqxWNxVLVJdHrKVrmUQJiZ6QA9bfSWQfGHmJ0L0+2bIwlJEKDT7uAPRZmJ
      hyiVbYy3LYtWV2dl5TKuY3/xUiHLxuYmLRvxRwBqs47g9lIbMYuGZRmUSmWarfYjs9oNiii6
      8Ps9CIKI2xsgHHj8BH0iAvAEQ1iWxNLCrK2hRqvZwO3x0u+26R9zbBcLBbzhKA2bOWp67Qb5
      Uh2vS7Ltnn1Av9MkV6jgdbts+e4/RWTh0iW0Rp7v/+M7xAbwbHwWweVhbipCu9M5kcs3Gg3g
      UUJ4ba6+uj0eLFPH4x1t3C6KMoqgU6w3yeULI9kCaBbzKNFpphMxfP7HC2ACQyCdVrtP0OdG
      0w9PFxzW4yJJMnt790gEPVhKiJmwh36vR3phEbWn4fXZCUE2EdwBrl5ZRZRcI/4wJsg+rl69
      MhZbO5ubiJ4wv/LVFZsNRpNSIQfuIFNT00fXm80quWyHBVeQRHj4/QHdThfZJdO1sTH9s4gi
      mIZFv1UjX6wya3MeBxCcSqKWq7Tw4PM9/ntNoAeQqJRydFQV1aa70RcIEvYpZCttAp7D6iUI
      0GzUqTdauGyeP6z1utRqNcyRnaCg9Q9tGQijW7Ms2o0qGxtbtoaMPpeF4IvjNtWjSXAmkyUQ
      TPKFL7/JUspeZfMGfJiWzHQs/OSbn4AoyciSgD8Us+3EgMM5wPb2Ls1mk3bnyRPqCQigS7MN
      yWSSfqNue3jQ6WksLy/hkg6/Qq1wgCb5mYr42N0fPn0KWOzsHjCXSpHP7I/ourTYvm+rcDCq
      LUAQqNfqtqUkuLwYnTpqXyeTOfSNB71utnZ22NvdsXVcqqH16BsSAUWEMcTvCIiH0ax24zIe
      2BEkkqkUqVTqaV0IczM9HaLZbBKZnrE9PJAlgXq9frQhQtNMWo0y+VLFZjyJjsxEGDEAAAiQ
      SURBVNbrc3BwQE/tjzgHMNCPbPVGtCUwM5fC5/UxPz9n7w9m6gRCIXRTIJ2aAyAYjTMTj9iO
      rRdlmVIxj6p20MYQv+MJhnDJbpLTw89xTmCZ7N66SabW5Pbtu09cz5nAHEAiHotiygoel31v
      u2j2aXbkIwHMLa8wN1K5FF57c1xnALt59Y1x2bKoVyoEw0HK5Spz6eTQ/YAgSlQqFabi8RPP
      djodvEF7w5deu4rlCrGYirOxsQnJ6Sc/9BhquSzFWpu+2iIas58zSRBlVl96gfWdHMFw+Im/
      1US8QJbR5Wc/+Rn3NndHGB5YdBp1Ose2XO5ubdLXDZtbO01yBwfs7e1xcJAbedhi9FU+fPdD
      9rLZEW2JzMylWFpaIp1O2vqDWaZBp92g39d4sGxSKeRQ/EHbxw65PEFkumSzWUKR0dLJm6aO
      Jiv46OEJjJZoF8DQdTrdHpb1lC6ESZKLYMBHX7fvILz68pe4+plrXo/MzRs3SKYWbHgRRBKJ
      CDduruP2+0lif2EHQNd6lAp5WoZOMmmv4o4LQXLhdcnUWipL9wsSm04Smx4+B9EDJFlh+dKj
      d4ENVT5BJBgKUi6XMEaoEw/o1OuYokC91niil3EiAui2GuimSa1ax8ReN5TPHVDOl1i4+iIB
      5fBrVKpVXJJCvVqx5Ubrd9rouk67UsewWa4HyG4PS6uXSMymJp5+b3d3j8h0GtHqMWJGxCNM
      QyObyaEZOi6Pn9Ss/SGQqXf5yQ9/QnJpCe+IawoAkWSKWHcHXyj2xL/hBBomE13ysLw4z8rl
      JdsxN7ndTdyB4InESPHEFP1em2jC3kqwNxJnbi7JC9dWR1q9hcNxt0sWuXvr9siLaqNSq9dR
      K/v0xABDHIH8WETJhcvosrGbJZfNjWZL9vLVX/0aL6ytMj83WDbvx1HZ2yY4t0ytlH/i8HMC
      jZOA2+3G6PURRXvVv9lsMpNeQjMgcOxEEVmU8Ae8qGoXsBELVCuysbFHbDpEIBy2Hb8DBs1G
      E8MSSadTEz+HamlpGc2wEGz+3o8iGIuzIipoIyp8XJk/HhCcTbN/sE0wEn8aJ8ECiseDAOzt
      7NiaIAaDQWS3gtpsYhyb8Oq6jkvxM5OwubATnmI64UWUvSP2ACJej8JMco6AT5nAsQ8nCQb8
      KP4QiXjM9vbHh7HI7BygBAJovdEjOMeFoXW4fWeLRq16IkzmUUzGC2TqNFttPD6f7VXS3bs3
      MEWJ9v1kWZ1mE0lRcMkiXZv7AdRGGUP2Ew35R6y0Arm9e3x0/RO2dh8+Y3cSfPz+Ow/tCR4V
      t1ehVi4TiY3oux8jlmWg9TXUvo4oPPmvOJH5mVor4wrG0LsZ25NgXziBofXxug+/gi8YxEeQ
      aNRge+uAyNDJeg3y+SJd1aDtkkdutWfm5jHdNcrVyecFFUQBn9eDoiijr0p/ahWXYFEoNeir
      vceGHJ8nsjvIF958dfD7z7AsjyQQn6GwuYXst7fHFaCv9REFCU03QYF2o8pBrghYuD12cvFI
      zKXnqG/mDocKNsv1AFGSqZTrJBKTbx1NvU+jVqHTh+m5wU7MGYRYco4VT4PupGf5IzARAbSr
      JTQLyrkiqXTSViGikQidnnG0muwPRVkLjbYgY5kWgYAfTddtRakeR5RdSIKApLjGEFo3GqLk
      YWH5MjPJeTxjnAc3yiUaPZOArejbp4OJ7QfQdUinpm25QXtdlUq9TSqVwn3Mr7dxdx3L1NjY
      2LZVLllRKOey1OuNkYdAek+llC+wu3swYlaIMSCAJAp8cuMjTkmmYRu3x0VX7Q+09fBpZSIC
      UBs1MvsH7B1kbFUOtdMmEAhQr9fRj63sxKNB1jc2iU7ZG48KiPj9PnRz9IBo2e0htZgiEvTT
      qA1/9u84EQQRvd/DsISx/sHdHh+KSxxLMqtJMREBKL4AV65eJhAI2SpAJJagVMgetjz363+n
      2QRZxuv1Idn0KffaDTpqj3qtMXKr3VebuAIxJMPgIPPk9BxniWUaaIbFyura2BbCAFq1Okog
      RKc1/AHmTwsTEYDoUtB63cMN3jaZmp4lkYgjS4eV3RcMUi9X6Koq2gA5IR/GwBA9zM5OEY9H
      R8wKYSF5QuitEpbi49Li/EjWRsXUOmiCQml/i+4YG+twIkGtWCSROP8TL8fFhNYBDCxLYGp6
      yvZQo9Oqs7e3d2Kxo9cbJQePiFtx4/F6Sc0NH3J8Eoue2kVyKUTDIfxDnDt8FkiKHzcapqyc
      2BQ/KrVCAVUzKBSK4zN6zkxsIayr6RQKRVuTzWazSWJqGp/Ph3hsuDM9Mw2WdZgCcGhM7t6+
      iyzLrN+9O7K/fHtnh1g8Tn7kcOjR0Q1YWl4m5NJp21sjfAjT0OiLLgKyiX9E79skmYgAjL6G
      aVno/b4tAaiqykxynljQj3bMA5EvlFlaSpO3FZyl01X7lEolem11xAA2nd59W/22OmJWiNEp
      FXNks1k0OYBvPHl/EUSJcDiEy+XCsp7dSfBEskL0TIlYKIAoK7aGGqV8Bn8oQiF3QCgd4IEX
      OhwOks2WWFldtmFV4Y0vv2HjudNw84Uv3be1NiaTI5BMLYzdpqF1+MmPf0ZyYQHXmLJpT4IJ
      nBFmsHV3na4pIkoyq6uXhu6GLMtkd2uLYHyG2LET3/fu3aLcsUilUkyNIVOBw/PPBHoAkVjI
      R10MoRbtxQIJgsjipcsPXZcVH35j9Bw1DheHiYRD+2MzoFYJTc2MnIT2Ad12k529DIrXazsv
      kMPFYyKTYL3XJFdqIFjm2GLlda3P1Zc+TyIWRdPG5OpweO6ZiABktxfJ0imWRj9a5wGNShmN
      w/MBSqXRD2xwuBhMKBq0jGaKyKZhez/AZ0kuXWZvZ5uaIXD58tIYLDpcBCbgBbJoNZvIsky2
      UGZpcX7i4cIOF5cJDIH67O7m8Xh9aG17Z4Q5OIyL/w81zt9U8ls5gwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
